{{template "base" .}}

{{define "main"}}

    <main class="form-main">
        <div class="card">
            <div class="card-header">
            </div>
            {{if .IsCatalogTask}}
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">
                        <div class="col-6">
                            {{template "save"}}
                        </div>
                    </li>
                    <li class="list-group-item">
                        <table id="json_data"
                               class="table table-striped table-bordered table-sm table-responsive"></table>
                    </li>
                </ul>


            {{else}}
                <div class="m-4">
                    <ul class="nav nav-tabs" id="myTab">
                        <li class="nav-item">
                            <a href="#home" class="nav-link active" data-bs-toggle="tab">Данные</a>
                        </li>
                        <li class="nav-item">
                            <a href="#access" class="nav-link" data-bs-toggle="tab" onclick="renderAccess()">Доступ</a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="home">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">
                                    <div class="col-6">
                                        {{template "save"}}
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    <table id="json_data"
                                           class="table table-striped table-bordered table-sm table-responsive"></table>
                                </li>
                            </ul>
                        </div>
                        <div class="tab-pane fade" id="access">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">
                                    <div class="col-6">
                                        <button id="btnSave" style="margin-left: 15px;font-size:14px;"
                                                class="btn btn-primary bi bi-save" onclick="saveAccess()">
                                            <span style="margin-left: 3px">Сохранить</span>
                                        </button>
                                        <button id="back" style="margin-left: 15px;font-size:14px;" class="btn bi bi-skip-backward  bg-success text-light" onclick="history.back(); ">
                                            <span style="margin-left: 3px">Назад</span>
                                        </button>
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    <table id="table_access"
                                           class="table table-striped table-bordered table-sm table-responsive">
                                    </table>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            {{end}}
        </div>
        <script>
            const table = document.getElementById('json_data')
            const tableAccess = document.getElementById('table_access')

            function valid() {
                // if (name.value === '' || tableDb.value === '') {
                //     btnSave.disabled = true
                // } else {
                //     btnSave.disabled = false
                // }
            }

            let idsNotNull = []
            let listListIdent = []
            let access = []
            function saveAccess() {

                let users = []
                for (a of access) {
                    let el = document.getElementById('access-'+a)
                    if (el.checked) {
                        users.push(a)
                    }
                }
                fetch('/api/save-access-catalog-record',
                    {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            id: data.entity_id,
                            table: data.table_name,
                            access: users.join(','),
                        })

                    })
                    .then(response => response.json())
                    .then((response) => {
                       alert('Доступ сохранен')
                    })
            }

            function renderAccess() {

                let html = ''


                fetch('/api/get-access-catalog-record',
                    {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            id: entityId,
                            table: data.table_name,
                        })

                    })
                    .then(response => response.json())
                    .then((response) => {
                        console.log(response)
                        html += '  <thead> '
                        html += ' <tr>'
                        html += ' <th>Пользователь</th>'
                        html += ' <th>Доступ</th>'
                        html += '</tr>'
                        html += ' </thead>'
                        if (response) {
                            response.map(function (item) {
                                html += '<tr>'
                                html += '<td>'
                                html += item.user_name
                                html += '</td>'
                                html += '<td>'
                                html += '<div class="form-check form-switch">' +
                                    '<input  class="form-check-input mx-auto" style="font-size: 24px" type="checkbox" id=access-'+item.user_name
                                access.push(item.user_name)
                                if (item.access) {
                                    html += ' checked '
                                }
                                html += ' </td>'


                            })
                            tableAccess.innerHTML = html
                        }

                    })
            }

            function renderTable() {

                listListIdent = []
                idsNotNull = []
                let html = ''
                let counter = 0
                for (field of data.fields) {
                    if (field.name) {
                        field.value = field.value.replaceAll('\\', '')

                        html += '<tr>'
                        html += '<td>' + field.name
                        if (!field.is_nullable) {
                            idsNotNull.push('val' + counter)
                            html += '<span style="color: red">*</span>'
                        }
                        html += '</td>'
                        html += '<td>'
                        switch (field.name_type) {
                            case 'date' :
                                html += ' <input class="form-control" style="width:160px"  type="date" '
                                break
                            case 'float' :
                                html += ' <input class="form-control" style="width:160px"  type="number" '
                                break
                            case 'int' :
                                if (field.link_table_id) {
                                    html += ' <select  name="task" class="form-select" '
                                    listListIdent.push({
                                        elemId: 'val' + counter,
                                        linkId: field.link_table_id,
                                        val: field.value
                                    })
                                    //setListComboBox('val'+counter, field.link_table_id)
                                } else {
                                    html += ' <input class="form-control" style="width:160px"  type="number" '
                                }
                                break
                            case 'bit' :
                                html += '<div class="form-check form-switch">' +
                                    '<input  class="form-check-input mx-auto" style="font-size: 24px" type="checkbox" '
                                break
                            default:
                                html += ' <input class="form-control" '
                                break
                        }
                        if (field.name_type === "bit" && field.value === 'checked') {
                            html += ' checked '
                        } else {

                            html += " value= '" + field.value + "'"
                        }

                        html += ' id="val' + counter + '">'
                        if (field.name_type === 'bit') html += '</div>'
                        html += '</td>'
                        html += '</tr>'

                    }
                    counter++
                }
                table.innerHTML = html
                setListComboBox()
            }

            function setListComboBox() {
                for (link of listListIdent) {
                    fetch('/api/catalog-list-link/?id=' + link.linkId,
                        {
                            method: 'POST',
                            headers: {
                                "Content-Type": "application/json"
                            },


                        })
                        .then(response => response.json())
                        .then((response) => {
                            if (response.length > 0) {
                                let htmlD = ''
                                let selected = 0
                                response.map(function (item, key) {

                                    if (item.id == link.val) selected = key
                                    htmlD += '<option value="' + item.id + '">' + item.name + '</option>'
                                })
                                let elem = document.getElementById(link.elemId)
                                elem.innerHTML = htmlD
                                elem.selectedIndex = selected
                            }
                        })
                }
            }

            function save() {
                //валидация
                for (let idVal of idsNotNull) {
                    let elem = document.getElementById(idVal)
                    if (elem) {

                        if (!elem.value) {
                            if (elem.type !== 'checkbox') {
                                alert('Заполните обязательные поля')
                                return
                            }
                        }
                    }
                }
                for (let i = 0; i < data.fields.length; i++) {
                    let el = document.getElementById('val' + i)
                    if (el) {

                        if (data.fields[i].name_type === "bit") {
                            data.fields[i].value = el.checked ? '1' : '0';

                        } else {
                            data.fields[i].value = el.value
                        }
                    } else {
                        // data.fields[i].value = ''
                    }

                }

                data.entity_id = entityId;

                fetch('/api/catalog-work-save',
                    {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify(data)
                    })
                    .then(response => response.json())
                    .then((response) => {

                        let txtArr = response.text.split("-")

                        if (txtArr[0] === "ok") {
                            if (!entityId) {

                                entityId = Number(txtArr[1])

                                //   getFields(true)

                            } else {
                                //         setValuesFields()


                            }
                            alert('Данные сохранены')

                        } else {
                            alert("Ошибка: " + response.text)
                        }
                    })

            }


            let id = {{ .Id}}

                let
            data = {{ .}}
                let
            entityId = {{ .EntityId}}
                renderTable()
            // renderAccess()
        </script>
    </main>
{{end}}