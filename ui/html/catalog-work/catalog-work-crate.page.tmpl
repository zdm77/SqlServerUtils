{{template "base" .}}

{{define "main"}}
    <main class="form-main">
        <div class="card">
            <div class="card-header">
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <div class="col-6">
                        {{template "save"}}
                    </div>
                </li>
                <li class="list-group-item">
                    <table id="json_data"
                           class="table table-striped table-bordered table-sm table-responsive"></table>
                </li>
            </ul>
        </div>
        <script>
            const table = document.getElementById('json_data')

            function valid() {
                // if (name.value === '' || tableDb.value === '') {
                //     btnSave.disabled = true
                // } else {
                //     btnSave.disabled = false
                // }
            }

            let idsNotNull = []

            function renderTable() {

                idsNotNull = []
                let html = ''
                let counter = 0
                for (field of data.fields) {
                    if (field.name) {
                        html += '<tr>'
                        html += '<td>' + field.name
                        if (!field.is_nullable) {
                            idsNotNull.push('val' + counter)
                            html += '<span style="color: red">*</span>'
                        }
                        html += '</td>'
                        html += '<td>'
                        switch (field.name_type) {
                            case 'date' :
                                html += ' <input class="form-control" style="width:160px"  type="date" '
                                break
                            case 'float' :
                                html += ' <input class="form-control" style="width:160px"  type="number" '
                                break
                            case 'int' :
                                html += ' <input class="form-control" style="width:160px"  type="number" '
                                break
                            case 'bit' :
                                html += '<div class="form-check form-switch">' +
                                    '<input  class="form-check-input mx-auto" style="font-size: 24px" type="checkbox" '
                                break
                            default:
                                html += ' <input class="form-control" '
                                break
                        }
                        if (field.name_type === "bit" && field.value === 'checked') {
                            html += ' checked '
                        } else {
                            html += ' value= "' + field.value + '"'
                        }
                        html += ' id="val' + counter + '">'
                        if (field.name_type === 'bit') html += '</div>'
                        html += '</td>'
                        html += '</tr>'

                    }
                    counter++
                }
                table.innerHTML = html
            }


            function save() {
                //валидация
                for (let idVal of idsNotNull) {
                    let elem = document.getElementById(idVal)
                    if (elem) {

                        if (!elem.value) {
                            if (elem.type!=='checkbox') {
                                alert('Заполните обязательные поля')
                                return
                            }
                        }
                    }
                }
                for (let i = 0; i < data.fields.length; i++) {
                    let el = document.getElementById('val' + i)
                    if (el ) {

                        if (data.fields[i].name_type==="bit") {
                            data.fields[i].value = el.checked ? '1' : '0';

                        } else {
                            data.fields[i].value = el.value
                        }
                    } else {
                        // data.fields[i].value = ''
                    }

                }

                data.entity_id = entityId;

                fetch('/api/catalog-work-save',
                    {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify(data)
                    })
                    .then(response => response.json())
                    .then((response) => {

                        let txtArr = response.text.split("-")

                        if (txtArr[0] === "ok") {
                            if (!entityId) {

                                entityId = Number(txtArr[1])
                                //   getFields(true)

                            } else {
                                //         setValuesFields()


                            }
                            alert('Данные сохранены')

                        } else {
                            alert("Ошибка: " + response.text)
                        }
                    })

            }

            {{/*console.log({{ .Fields}})*/}}
            let id = {{ .Id}}
                // let fields = {{ .Fields}}
                let
            data = {{ .}}
                let
            entityId = {{ .EntityId}}
                renderTable()
        </script>
    </main>
{{end}}