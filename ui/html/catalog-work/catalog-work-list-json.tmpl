{{template "base" .}}

{{define "main"}}
    <main class="form-main">
        <div class="card">
            <div class="card-header" id="cardHeader">
            </div>
            {{/*            {{template "list-panel"}}*/}}
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <button class="btn btn-primary bi bi-plus-circle "
                            style="font-size:14px;"
                            onclick="create()">
                        <span style="margin-left: 3px">Создать</span></button>
                    <button class="btn btn-success bi bi-arrow-counterclockwise "
                            style="font-size:14px;"
                            onclick="refresh()">
                        <span style="margin-left: 3px">Обновить</span></button>

                        <button  id="buttonClear" class="btn btn-outline-success bi bi-x-circle "
                                style="font-size:14px;"
                                onclick="clearFind()">
                            <span style="margin-left: 3px">Очистить фильтр</span></button>

                </li>
                <li class="list-group-item" id="li-table">
                </li>
            </ul>
        </div>
        <script>
            function create() {
                document.location = '/catalog-work-create/?id=' + catalogId
            }

            function refresh() {
                // table.draw();
                $('#table').remove()
                renderTable()
            }

            let arrFind = []
            let headers = []

            function clearFind() {

                arrFind = []
                for (let i = 0; i <= headers.length; i++) {
                    let el = $('#find' + i)
                    //   console.log(el.val())
                    el.val('')

                }
                //  if (arrFind.length > 0) {
                let table = $('#json_data').DataTable();
                table.draw();
                $('#buttonClear').hide()
            }

            function find(el) {
                arrFind = []
                // console.log(el)
                // arrFind.push({
                //     id: -1,
                //     type: '',
                //     val: '',
                // })
                for (let i = 1; i < headers.length; i++) {

                    el = $('#find' + i)

                    if (el.val()) {
                        arrFind.push({
                            id: i,
                            type: el.attr('type'),
                            val: el.val(),
                        })
                    }

                }
                if (arrFind.length>0) {

                    $('#buttonClear').show()
                } else {
                    $('#buttonClear').hide()
                }
                //  if (arrFind.length > 0) {
                let table = $('#json_data').DataTable();
                table.draw();
                //}

            }

            function renderTable() {
                let liTable = document.getElementById("li-table")
                liTable.innerHTML = '  <table id="json_data"  class="table table-striped table-bordered table-sm table-responsive"></table>'
                let table = document.getElementById("json_data");
                console.log(table)
                table.innerHTML = ''

                let html = ''
                fetch('/api/catalog-work-list',
                    {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            id: id,

                        })

                    })
                    .then(response => response.json())
                    .then((response) => {
                        if (response.text != 'not-login') {
                            console.log(response)
                            const obj = JSON.parse(response.json);
                            headers = response.headers
                            document.getElementById('cardHeader').innerText = response.name_catalog
                            id = response.catalog_id
                            const fieldId = response.field_id
                            let fieldIdIdx = -1

                            html += '<thead>'


                            //поиск
                            html += '<tr>'
                            for (let i = 1; i < response.headers.length; i++) {
                                switch (response.types[i]) {
                                    case 'date': {
                                        html += '<td><input id="find' + i + '" type="date" class="form-control" onchange="find(this)"/></td>'
                                        break
                                    }
                                    default: {
                                        html += '<td><input id="find' + i + '" type="text" class="form-control" onkeyup="find(this)"/></td>'
                                        break
                                    }
                                }


                            }

                            html += '</tr>'
                            //заголовки
                            html += '<tr>'
                            for (let i = 0; i < response.headers.length; i++) {
                                const val = response.headers[i]
                                if (val === fieldId) {
                                    fieldIdIdx = i
                                } else {
                                    if (response.is_list[i])
                                        html += '<th>' + val + '</th> '
                                }
                            }
                            html += '<th></th>'
                            html += '</tr>'


                            html += '</thead>'


                            let counter = 0
                            for (str in obj) {
                                html += '<tr>'
                                let row = obj[str]

                                let isHref = false
                                let valId = 0
                                valId = response.values_id[counter]
                                let i = 0
                                for (key in row) {

                                    let val = row[key]
                                    if (response.types[i] === 'date' && val !== '') {
                                        let date = new Date(val)
                                        val = date.toLocaleDateString()
                                    }

                                    if (response.headers[i] != response.field_id) {
                                        html += '<td>'
                                        if (val === 'unchecked') {
                                            val = ''
                                        }
                                        if (val === 'checked') {
                                            html += '<i class="bi bi-check2" style="font-size: 25px"></i>'
                                        } else {
                                            if (!isHref) {

                                                html += '<a href="/catalog-work-edit/?id=' + id + '&entityId=' + valId + '">'
                                                html += val + '</a> '
                                                isHref = true

                                            } else {
                                                html += val
                                            }

                                        }
                                        html += '</td>'
                                    }
                                    i++


                                }
                                counter++

                                html += '<td width="32px"><i class="bi-trash text-danger" style="cursor: pointer"' +
                                    ' onclick="deleteTask(' + valId + ',' + id + ')"></i></td>'
                                html += '</tr>'
                            }


                        }
                        table.innerHTML = html
                        // if (!isRender) {


                        $('#json_data').DataTable({
                            language: {
                                url: '/static/ru.json',
                            },
                            sPaging: false,
                            pagingType: "simple",
                            "bLengthChange": false,
                            "processing": true,
                            'sDom': 't',
                            scrollY: 700,
                            scroller: true,
                        })
                        $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {

                            if (arrFind.length === 0) return true
                            let isOk = false

                            // for (let i = 0; i <= arrFind.length ; i++) {
                            //     // console.log(arrFind[i].id)
                            // }
                            for (const item of arrFind) {

                                switch (item.type) {
                                    case 'text': {
                                        //console.log(data[item.id])
                                        if (data[item.id - 1].toUpperCase().startsWith(item.val.toUpperCase())) {
                                            isOk = true
                                        } else {
                                            return false
                                        }
                                        break
                                    }
                                    case 'date': {
                                        let val = new Date(item.val).toLocaleDateString();
                                        if (val == data[item.id - 1]) {
                                            isOk = true
                                        } else {
                                            return false
                                        }
                                        break
                                    }
                                    default : {
                                        if (item.val == data[item.id - 1]) {
                                            isOk = true
                                        } else {
                                            return false
                                        }
                                    }
                                }

                            }
                            return isOk

                        });
                        // } else {
                        //     table.draw()
                        // }
                        isRender = true
                        $('input,select,textarea').attr("autocomplete", "off");

                    })


            }


            function deleteTask(id, catalogId) {
                const isDel = confirm('Вы действительно хотите удалить запись? ')
                if (isDel) {
                    fetch('/api/catalog-work-list/delete/?id=' + id + '&catalogId=' + catalogId)
                        .then(response => response.json())
                        .then((response) => {

                            if (response.text !== 'not-login') {
                                if (response.text === 'ok') {
                                    renderTable()
                                    alert('Данные удалены')

                                } else {
                                    alert(response.text)
                                }
                            } else {
                                document.location = '/'
                            }
                        })
                }
            }

            let isRender = false
            let id = {{ .}}
                let
            catalogId = id
            renderTable()
            $(document).ready(function (e){

                $('#buttonClear').hide()

            })

        </script>
    </main>
{{end}}