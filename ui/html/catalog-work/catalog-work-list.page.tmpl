{{template "base" .}}

{{define "main"}}
    <main class="form-main">
        <div class="card">
            <div class="card-header" id="cardHeader">
            </div>
            {{template "list-panel"}}
        </div>
        <script>
            function create() {
                document.location = '/catalog-work-create/?id=' + catalogId
            }

            function refresh() {
                renderTable()
            }
            let arrFind = []

            function find(el) {
                arrFind = []
                for (let i = 1; i <= 3; i++) {

                    let el = $('#qqq' + i)
                    if (el.val()) {
                        arrFind.push({
                            id: i - 1,
                            type: el.attr('type'),
                            val: el.val(),
                        })
                    }

                }
                //  if (arrFind.length > 0) {
                let table = $('#json_data').DataTable();
                table.draw();
                //}

            }

            function renderTable() {
                let table = document.getElementById("json_data");
                table.innerHTML = ''

                let html = ''
                fetch('/api/catalog-work-list',
                    {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            id: id,

                        })

                    })
                    .then(response => response.json())
                    .then((response) => {
                        if (response.text != 'not-login') {
                            const obj = JSON.parse(json);
                            document.getElementById('cardHeader').innerText = response.name_catalog
                            id = response.catalog_id
                            const fieldId = response.field_id
                            let fieldIdIdx = -1
                            html += '<thead>'
                            for (let i = 0; i < response.headers.length; i++) {
                                const val = response.headers[i]
                                if (val === fieldId) {
                                    fieldIdIdx = i
                                } else {
                                    if (response.is_list[i])
                                        html += '<th>' + val + '</th> '
                                }
                            }
                            html+='<th></th>'

                            html += '</thead>'
                            let vals = response.vals

                            for (let i = 0; i < vals.length; i++) {
                                let isHref = false
                                let row = vals[i]
                                html += '<tr>'
                                let valId = response.values_id[i].replaceAll('"', '')
                                // let valId =response.values_id[i]
                                for (let j = 0; j < row.length; j++) {
                                    if (response.is_list[j]) {
                                        if (fieldIdIdx !== j) {
                                            // let val = row[j].replaceAll('"', '')
                                            let val = row[j].replaceAll('\\', '')
                                            html += '<td>'
                                            if (val === 'unchecked') {
                                                val = ''
                                            }
                                            if (val === 'checked') {
                                                html += '<i class="bi bi-check2" style="font-size: 25px"></i>'
                                            } else {
                                                if (!isHref) {

                                                    html += '<a href="/catalog-work-edit/?id=' + id + '&entityId=' + valId + '">'
                                                    html += val + '</a> '
                                                    isHref = true

                                                } else {
                                                    html += val
                                                }

                                            }

                                            html += '</td>'
                                        }
                                    }
                                }
                                html += '<td width="32px"><i class="bi-trash text-danger" style="cursor: pointer"' +
                                    ' onclick="deleteTask(' + valId + ',' + id + ')"></i></td>'
                                html += '</tr>'
                            }
                        }
                        table.innerHTML = html
                        $('#json_data').DataTable({
                            sPaging: false,
                            pagingType: "simple",
                            "bLengthChange": false,
                            "processing": true,
                            'sDom': 't',
                        })
                        $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
                            if (arrFind.length === 0) return true
                            let isOk = false
                            for (const item of arrFind) {

                                switch (item.type) {
                                    case 'text': {
                                        if (data[item.id].toUpperCase().startsWith(item.val.toUpperCase())) {
                                            isOk = true
                                        } else {
                                            return false
                                        }
                                        break
                                    }
                                    case 'date': {
                                        let val = new Date(item.val).toLocaleDateString();
                                        if (val == data[item.id]) {
                                            isOk = true
                                        } else {
                                            return false
                                        }
                                        break
                                    }
                                    default : {
                                        if (item.val == data[item.id]) {
                                            isOk = true
                                        } else {
                                            return false
                                        }
                                    }
                                }

                            }
                            return isOk

                        });
                    })


            }



            function deleteTask(id, catalogId) {
                const isDel = confirm('Вы действительно хотите удалить запись? ')
                if (isDel) {
                    fetch('/api/catalog-work-list/delete/?id=' + id + '&catalogId=' + catalogId)
                        .then(response => response.json())
                        .then((response) => {

                            if (response.text !== 'not-login') {
                                if (response.text === 'ok') {
                                    renderTable()
                                    showMessage('Данные удалены')

                                } else {
                                    showError(response.text)
                                }
                            } else {
                                document.location = '/'
                            }
                        })
                }
            }

            let id = {{ .}}
                let
            catalogId = id
            renderTable()
        </script>
    </main>
{{end}}