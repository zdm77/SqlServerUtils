<head>
    <script src="/static/js/xlsx.min.js"/>
    <script>

    </script>
</head>
{{/*<script>*/}}
{{/*    {{if .Name}}*/}}
{{/*    //document.getElementById("nameTask").val=5*/}}

{{/*    {{end}}*/}}
{{/*</script>*/}}
{{template "base" .}}

{{define "main"}}

    <main class="form-main">
        <div class="card">
            <div class="card-header">
                Задача
            </div>
            <form id='form'
                  encType="multipart/form-data">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">
                        <div class="row">
                            <div class="col-sm">
                                <label for="name" class="form-label">Наименование</label>
                                <input class="form-control" id="name" value={{ .Name}}>
                            </div>
                            <div class="col-sm">
                                <label for="table_db" class="form-label">Таблица БД</label>
                                <input class="form-control" id="table_db" value={{ .TableDb}}>
                            </div>
                            <div class="col-sm">
                                <label for="str_header" class="form-label">Строка заголовка (число)</label>
                                <input class="form-control" id="str_header" value={{ .StrHeader}}>
                            </div>
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="row">
                            <div class="col-6">
                                <label for="file_upload" class="form-label">Файл-пример для загрузки заголовков</label>
                                <input class="form-control" type="file" id="file_upload">
                            </div>
                            <div class="col-1">
                            </div>
                        </div>
                    </li>
                </ul>
            </form>
            <div class="col-6">
                {{template "save"}}
            </div>
            <table id="json_data"
                   class="table table-striped table-bordered table-sm table-responsive"></table>
        </div>
        <script>
            const strHeader = document.getElementById('str_header')
            strHeader.addEventListener('keyup', function () {
                valid()

            });
            const strName = document.getElementById('name')
            strName.addEventListener('keyup', function () {
                valid()

            });
            const tableDb = document.getElementById('table_db')
            tableDb.addEventListener('keyup', function () {
                valid()

            });
            let selectFile = document.getElementById('file_upload')
            selectFile.addEventListener('change', function () {
               uploadToServ()

            });
            let btnSave = document.getElementById('btnSave')
            function valid() {
                if (isNaN(strHeader.value)) {
                    alert('Недопустимое значение. Введите число.')
                    selectFile.disabled = true
                    btnSave.disabled = true
                } else {
                    if (strHeader.value === '' || strName.value === '' || tableDb.value === '') {
                        selectFile.disabled = true
                        btnSave.disabled = true
                    } else {
                        selectFile.disabled = false
                        btnSave.disabled = false
                    }
                }
            }
            valid()
            let dataParams = []
            renderData()

            function uploadToServ() {
                dataParams = []
                //  const form = document.getElementById('form')
                const form = document.querySelector('form')
                const data = new FormData(form);
                const strHeaderVal = document.getElementById('str_header').value
                let files = document.getElementById('file_upload').files
                data.append('file', files[0]);
             //   data.append('task_id', {{ .Id}});
                data.append('str_header', strHeaderVal);
                data.append('only_headers', 'true');
                let table = document.getElementById("json_data");
                fetch('/api/upload',
                    {
                        method: 'POST',
                        body: data,
                    })
                    .then(response => response.json())
                    .then((response) => {
                        let htmlData = ''
                        response.map(function (item) {

                            htmlData += '<tr><td>' + item.field_excel + '</td><td><input class="form-control" id=val' + item.id + '></td> ' +
                                '<td>' +
                                ' <select id=tp' + item.id + ' name="task" class="form-select">' +

                                ' <option value="Строка">Строка</option>' +
                                ' <option value="Число">Число</option>' +
                                ' <option value="Дата">Дата</option> ' +
                                '</select>'
                            '</td>' +
                            '</tr>'


                            dataParams.push({
                                task_id: {{ .Id}},
                                id: item.id,
                                field_excel: item.field_excel,
                                field_db: '',
                            })
                        })
                        table.innerHTML = htmlData
                    });
            }

            function upload() {
                var files = document.getElementById('file_upload').files;
                if (files.length == 0) {
                    alert("Please choose any file...");
                    return;
                }
                var filename = files[0].name;
                var extension = filename.substring(filename.lastIndexOf(".")).toUpperCase();
                if (extension == '.XLS' || extension == '.XLSX') {
                    //Here calling another method to read excel file into json
                    excelFileToJSON(files[0]);
                } else {
                    alert("Please select a valid excel file.");
                }
            }


            function excelFileToJSON(file) {
                dataParams = []
                try {
                    let reader = new FileReader();
                    reader.readAsBinaryString(file);
                    reader.onload = function (e) {
                        let data = e.target.result;
                        let workbook = XLSX.read(data, {
                                type: 'binary'
                            }
                        );

                        let headers = []
                        let firstSheetName = workbook.SheetNames[0];
                        //reading only first sheet data
                        let jsonData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName]);
                        //displaying the json result into HTML table
                        let from = document.getElementById('str_header').value

                        //  for (let i = from - 1; i < jsonData.length; i++) {
                        // let dataJson = JSON.stringify(jsonData[from - 2]);
                        let myMap = new Map(Object.entries(jsonData[from - 2]));
                        let htmlData = ''
                        let table = document.getElementById("json_data");
                        let counter = 0
                        for (let headA of myMap.values()) {
                            counter++
                            let head = headA.replaceAll('"', "")

                            headers.push(head)
                            dataParams.push({
                                task_id: {{ .Id}},
                                id: counter,
                                field_excel: head,
                                field_db: '',
                                col_number: counter,
                            })

                            htmlData += '<tr><td>' + head + '</td><td><input class="form-control" id=val' + counter + '></td> ' +
                                '<td>' +
                                ' <select id=tp' + counter + ' name="task" class="form-select">' +

                                ' <option value="Строка">Строка</option>' +
                                ' <option value="Число">Число</option>' +
                                ' <option value="Дата">Дата</option> ' +
                                '</select>'
                            '</td>' +
                            '</tr>'
                        }
                        table.innerHTML = htmlData;
                    }
                } catch (e) {
                    console.error(e);
                }
            }

            function renderData() {
                fetch('/api/task-params',
                    {
                        method: 'PUT',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({id: {{ .Id}}})
                    })
                    .then(r => r.json())
                    .then((r) => {
                        dataParams = []
                        let table = document.getElementById("json_data");
                        let htmlData = ''
                        let counter = 0
                        for (let item of r) {

                            // for (let i = 0; i < r.length; i++) {
                            dataParams.push({
                                task_id: {{ .Id}},
                                id: counter,
                                field_excel: item.field_excel,
                                field_db: item.field_db,
                                field_type: item.field_type,
                            })
                            htmlData += '<tr>' +
                                '<td>' + item.field_excel + '</td>' +
                                '<td><input class="form-control" id=val' + counter + ' value=' + item.field_db + '></td>' +
                                '<td>' +
                                ' <select id=tp' + counter + ' name="task" class="form-select">' +

                                ' <option selected>' + item.field_type + '</option>' +
                                ' <option value="Строка">Строка</option>' +
                                ' <option value="Число">Число</option>' +
                                ' <option value="Дата">Дата</option> ' +
                                '</select>'
                            '</td>' +
                            '</tr>'

                            counter++
                        }
                        table.innerHTML = htmlData;
                        console.log(dataParams)
                    });
            }

            function save() {

                let dataParamsResult = []
                dataParams.map(function (item) {
                    let el = document.getElementById("val" + item.id)
                    if (el) {
                        item.field_db = el.value
                        el = document.getElementById("tp" + item.id)
                        if (el) {
                            item.field_type = el.value
                        }

                    }
                    dataParamsResult.push(item)
                })

                let name = document.getElementById("name").value
                let table_db = document.getElementById("table_db").value
                let str_header = document.getElementById("str_header").value
                fetch('/api/task-save',
                    {
                        method: 'PUT',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            id: id,
                            name: name,
                            table_db: table_db,
                            str_header: Number(str_header)
                        })
                    })
                    .then(response => response.json())
                    .then((response) => {
                        let txtArr = response.text.split("-")
                        console.log(txtArr)
                        console.log(txtArr[1])
                        if (txtArr[0] == "ok") {
                            if (!id) {
                                id = Number(txtArr[1])
                                for (let i = 0; i < dataParamsResult.length; i++) {
                                    dataParamsResult[i].task_id=id
                                }
                            }

                            //Сохраняем таблицу
                            if (dataParams.length > 0) {
                                fetch('/api/task-save-params',
                                    {
                                        method: 'PUT',
                                        headers: {
                                            "Content-Type": "application/json"
                                        },
                                        body: JSON.stringify(dataParamsResult)
                                    })
                                    .then(response => response.json())
                                    .then((response) => {
                                        if (response.text == "ok") {

                                            alert("Данные сохранены")
                                        } else {
                                            alert("Ошибка: " + response.text)
                                        }
                                    });
                                // alert("Данные сохранены")
                            } else {
                                alert("Данные сохранены")
                            }
                        } else {
                            alert("Ошибка: " + response.text)
                        }
                    });
            }
            let id = {{ .Id}}
        </script>
    </main>




{{end}}